<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
File Measures: 
	Number of req in file = 0
	Number of req sentences in file = 89
<FailedRequirement>
	<Requirement>
		ID: [fa_84:]
		<ReqSentence>
			<PR>
				Id: [1]
				text:  if an object is ahead of the vehicle and the time of an impact is less than or equal to the time ta seconds, an acoustic signal is issued and the brakes are activated by x..
			</PR>
		</ReqSentence>
	</Requirement>
</FailedRequirement>
<SucceededRequirement>
	<Requirement>
		ID: [fa_6:]
		text:  if the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance, the vehicle accelerates within 2 seconds before the set speed is reached.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance, the vehicle accelerates within 2 seconds before the set speed is reached.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [A[((AF((Q) v (R))) v AG(¬(R))) W (R)]] )
					CTL-Formula: AG( [(the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance)] ==> [A[((AF((the vehicle accelerates) v (the set speed is reached))) v AG(¬(the set speed is reached))) W (the set speed is reached)]] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the vehicle accelerates within 2 seconds
					C[2]==> Classification: act 
					C[3]==> Extracted Text: before the set speed is reached
					C[3]==> Classification: actScope 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_59:]
		text:  if the driver pushes the cruise control lever above the first resistance level and the cruise control is activated, the cruise control speed set point is increased to the next ten’s place.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver pushes the cruise control lever above the first resistance level and the cruise control is activated, the cruise control speed set point is increased to the next ten’s place.
				<Formal-Representation>
					CTL-AbbrevatedFormula: 
					CTL-Formula: CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: AG( [((the driver pushes the cruise control lever up to the first resistance level) AND (the cruise control is activate))] ==> [(the cruise control speed set point is increased to the next ten ’s place)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver pushes the cruise control lever above the first resistance level
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control is activated
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the cruise control speed set point is increased to the next ten ’s place
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_67:]
		text:  if the driver presses the speed limiting lever downwards within the first resistance stage and the speed limit function is activated, the speed limit is decreased by n.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver presses the speed limiting lever downwards within the first resistance stage and the speed limit function is activated, the speed limit is decreased by n..
				<Formal-Representation>
					CTL-AbbrevatedFormula: 
					CTL-Formula: to the next ten ’s place CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
				  CTL-Formula: AG( [((the driver presses the limiting lever downwards within the first resistance stage) AND (the speed limit function is activated))] ==> [(the speed limit is decreased by n)] )  
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver presses the limiting lever downwards within the first resistance stage
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the speed limit function is activated
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the speed limit is decreased by n.
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_35:]
		text:  when pressing the RCMTECHTERM_gas_pedal beyond 90, the speed limit is deactivated.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when pressing the RCMTECHTERM_gas_pedal beyond 90, the speed limit is deactivated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(pressing the RCMTECHTERM_gas_pedal beyond 90)] ==> [(the speed limit is deactivated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when pressing the RCMTECHTERM_gas_pedal beyond 90
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: the speed limit is deactivated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_99:]
		text:  if the speed of the RCMTECHTERM_preceding_vehicle decreases below 20, the distance is set to 2.5. when both vehicles are standing, the absolute distance is regulated to 2m. when the RCMTECHTERM_preceding_vehicle is accelerating, the distance is set to 3 before the vehicle speed exceeds 20 .

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the speed of the RCMTECHTERM_preceding_vehicle decreases below 20, the distance is set to 2.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the speed of the RCMTECHTERM_preceding_vehicle decreases below 20)] ==> [(the distance is set to 2)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the speed of the RCMTECHTERM_preceding_vehicle decreases below 20
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the distance is set to 2
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  when both vehicles are standing, the absolute distance is regulated to 2m.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(both vehicles are standing)] ==> [(the absolute distance is regulated to 2m)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when both vehicles are standing
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: the absolute distance is regulated to 2m
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [3]
				text:  when the RCMTECHTERM_preceding_vehicle is accelerating, the distance is set to 3 before the vehicle speed exceeds 20 .
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [A[((AF((Q) v (R))) v AG(¬(R))) W (R)]] )
					CTL-Formula: AG( [(the RCMTECHTERM_preceding_vehicle is accelerating)] ==> [A[((AF((the distance is set to 3) v (the vehicle speed exceeds 20))) v AG(¬(the vehicle speed exceeds 20))) W (the vehicle speed exceeds 20)]] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the RCMTECHTERM_preceding_vehicle is accelerating
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: the distance is set to 3
					C[2]==> Classification: act 
					C[3]==> Extracted Text: before the vehicle speed exceeds 20
					C[3]==> Classification: actScope 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_63:]
		text:  if the driver pushes down the cruise control lever for more than t seconds and the cruise control is activated through the first resistance level, the target speed of the cruise control is reduced every t seconds to the next lower ten’s place.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver pushes down the cruise control lever for more than t seconds and the cruise control is activated through the first resistance level, the target speed of the cruise control is reduced every t seconds to the next lower ten’s place.
				<Formal-Representation>
				  CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
				  CTL-Formula: AG( [((the driver pushes down the cruise control lever for more than t seconds) AND (the cruise control is activated through the first resistance level))] ==> [(the target speed of the cruise control is reduced every t seconds to the next lower ten ’s place.)] ) 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver pushes down the cruise control lever for more than t seconds
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control is activated through the first resistance level
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the target speed of the cruise control is reduced every t seconds to the next lower ten ’s place
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_31:]
		text:  the current vehicle speed is adopted as speed limit.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  the current vehicle speed is adopted as speed limit.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the current vehicle speed is adopted as speed limit)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the current vehicle speed is adopted as speed limit
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [al_40:]
		text:  when moving the RCMTECHTERM_pitman_arm to RCMVAL_turn_left, the vehicle flashes all left direction indicators. left direction indicators are front left, exterior mirror left and rear left.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  when moving the RCMTECHTERM_pitman_arm to RCMVAL_turn_left, the vehicle flashes all left direction indicators.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(moving the RCMTECHTERM_pitman_arm to RCMVAL_turn_left)] ==> [(the vehicle flashes all left direction indicators)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when moving the RCMTECHTERM_pitman_arm to RCMVAL_turn_left
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: the vehicle flashes all left direction indicators
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  left direction indicators are front left, exterior mirror left and rear left.
				<Formal-Representation>
					CTL-AbbrevatedFormula: 
					CTL-Formula: 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: left direction indicators are front left
					C[1]==> Classification: act 
					C[2]==> Extracted Text: exterior mirror left
					C[2]==> Classification: act 
					C[3]==> Extracted Text: rear left
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-28:]
		text: a subvoltage is present if the voltage in the vehicle electrical system is less than 8.5.

		<ReqSentence>
			<PR>
				Id: [1]
				text: a subvoltage is present if the voltage in the vehicle electrical system is less than 8.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the voltage in the vehicle electrical system is less than 8)] ==> [(a subvoltage is present)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: a subvoltage is present
					C[1]==> Classification: act 
					C[2]==> Extracted Text: if the voltage in the vehicle electrical system is less than 8
					C[2]==> Classification: cond 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-16:]
		text:  if  the RCMTECHTERM_hazard_warning_light_switch is released, direction indicators flash synchronically. if the ignition key is in the ignition lock, the pulse ratio of bright to dark is 1. if the ignition key is not in the lock, the pulse ratio is 5.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if  the RCMTECHTERM_hazard_warning_light_switch is released, direction indicators flash synchronically.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the RCMTECHTERM_hazard_warning_light_switch is released)] ==> [(direction indicators flash synchronically)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the RCMTECHTERM_hazard_warning_light_switch is released
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: direction indicators flash synchronically
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  if the ignition key is in the ignition lock, the pulse ratio of bright to dark is 1.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the ignition key is in the ignition lock)] ==> [(the pulse ratio is 1)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the ignition key is in the ignition lock
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the pulse ratio is 1
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [3]
				text:  if the ignition key is not in the lock, the pulse ratio is 5.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(¬ P)] ==> [(Q)] )
					CTL-Formula: AG( [(¬ the ignition key is not in the lock)] ==> [(the pulse ratio is 5)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the ignition key is not in the lock
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the pulse ratio is 5
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-24:]
		text: if the darkness switch is activated, the ambient lighting is not activated.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the darkness switch is activated, the ambient lighting is not activated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(¬ Q)] )
					CTL-Formula: AG( [(the darkness switch is activated)] ==> [(¬ the ambient lighting is not activated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the darkness switch is activated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the ambient lighting is not activated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-12:]
		text: if the RCMTECHTERM_brake_pedal exceeds the threshold value RCMVAR_m, the RCMTECHTERM_braking_force is strengthened to 100.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the RCMTECHTERM_brake_pedal exceeds the threshold value RCMVAR_m, the RCMTECHTERM_braking_force is strengthened to 100.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the RCMTECHTERM_brake_pedal exceeds the threshold value RCMVAR_m)] ==> [(the RCMTECHTERM_braking_force is strengthened to 100)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the RCMTECHTERM_brake_pedal exceeds the threshold value RCMVAR_m
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the RCMTECHTERM_braking_force is strengthened to 100
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-32:]
		text: an overvoltage is present if the voltage in the vehicle electrical system is more than 14.

		<ReqSentence>
			<PR>
				Id: [1]
				text: an overvoltage is present if the voltage in the vehicle electrical system is more than 14.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the voltage in the vehicle electrical system is more than 14)] ==> [(an overvoltage is present)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: an overvoltage is present
					C[1]==> Classification: act 
					C[2]==> Extracted Text: if the voltage in the vehicle electrical system is more than 14
					C[2]==> Classification: cond 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-20:]
		text: if flashing cycles exceed 1000, the cumulated deviation must not exceed 5.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if flashing cycles exceed 1000, the cumulated deviation must not exceed 5.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(flashing cycles exceed 1000)] ==> [(the cumulated deviation must not exceed 5)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if flashing cycles exceed 1000
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the cumulated deviation must not exceed 5
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-64:]
		text: if adaptive RCMTECHTERM_high_beam_headlight is activated and the vehicle drives faster than 30 and no light of an RCMTECHTERM_advancing_vehicle is recognised by the camera, the street should be illuminated within 2 seconds


		<ReqSentence>
			<PR>
				Id: [1]
				text: if adaptive RCMTECHTERM_high_beam_headlight is activated and the vehicle drives faster than 30 and no light of an RCMTECHTERM_advancing_vehicle is recognised by the camera, the street should be illuminated within 2 seconds.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) AND (Q) AND (R))] ==> [(S)] )
					CTL-Formula: AG( [((adaptive RCMTECHTERM_high_beam_headlight is activated) AND (no light of an RCMTECHTERM_advancing_vehicle is recognised by the camera) AND (the vehicle drives faster than 30))] ==> [(the street should be illuminated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if adaptive RCMTECHTERM_high_beam_headlight is activated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the vehicle drives faster than 30
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: if no light of an RCMTECHTERM_advancing_vehicle is recognised by the camera
					C[3]==> Classification: cond 
					C[4]==> Extracted Text: the street should be illuminated within 2 seconds
					C[4]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-60:]
		text: if the ambient light is activated, the low beam headlights are activated when the engine is switched RCMVAL_off and the ignition key is pulled of the ignition lock. the low beam headlights are deactivated when none of the following actions occur within the next 30 seconds.
#Minus# opening or closing a door
#Minus# insertion or removal of the ignition key


		<ReqSentence>
			<PR>
				Id: [1]
				text: if the ambient light is activated, the low beam headlights are activated when the engine is switched RCMVAL_off and the ignition key is pulled of the ignition lock.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the ambient light is activated)] ==> [(the ignition key is pulled of the ignition lock)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the ambient light is activated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the low beam headlights are activated
					C[2]==> Classification: act 
					C[3]==> Extracted Text: when the engine is switched RCMVAL_off
					C[3]==> Classification: trig 
					C[4]==> Extracted Text: the ignition key is pulled of the ignition lock
					C[4]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  the low beam headlights are deactivated when none of the following actions occur within the next 30 seconds.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(none of the following actions occur)] ==> [(the beam headlights are deactivated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the low beam headlights are deactivated
					C[1]==> Classification: act 
					C[2]==> Extracted Text: when none of the following actions occur within the next 30 seconds
					C[2]==> Classification: trig 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_19:]
		text:  the cruise control lever activates the cruise control.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  the cruise control lever activates the cruise control.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the cruise control lever activates the cruise control)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the cruise control lever activates the cruise control
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_3:]
		text:  when the driver enables the cruise control, the vehicle maintains the set speed if possible. the driver enables the cruise control when pulling the cruise control lever or when pressing the cruise control lever up or down.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the driver enables the cruise control, the vehicle maintains the set speed if possible.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the driver enables the cruise control)] ==> [(the vehicle maintains the set speed if possible)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the driver enables the cruise control
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: the vehicle maintains the set speed if possible
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  the driver enables the cruise control when pulling the cruise control lever or when pressing the cruise control lever up or down.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) OR ((Q) OR (R)))] ==> [(S)] )
					CTL-Formula: AG( [((pulling the cruise control lever) OR ((pressing the cruise control lever up) OR (pressing the cruise control lever down)))] ==> [(the driver enables the cruise control)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the driver enables the cruise control
					C[1]==> Classification: act 
					C[2]==> Extracted Text: when pulling the cruise control lever
					C[2]==> Classification: trig 
					C[3]==> Extracted Text: when pressing the cruise control lever up
					C[3]==> Classification: trig
					C[4]==> Extracted Text: when pressing the cruise control leverdown
					C[4]==> Classification: trig
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_28:]
		text:  when pushing the brake or the hand brake, the cruise control is deactivated.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  when pushing the brake or the hand brake, the cruise control is deactivated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) OR (Q))] ==> [(R)] )
					CTL-Formula: AG( [((pushing the brake) OR (pushing the brake))] ==> [(the cruise control is deactivated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when pushing the brake the hand brake
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: the cruise control is deactivated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_36:]
		text:  when the pressure on the RCMTECHTERM_gas_pedal decreases below 90, the speed limit is activated.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the pressure on the RCMTECHTERM_gas_pedal decreases below 90, the speed limit is activated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the pressure on the RCMTECHTERM_gas_pedal decreases below 90)] ==> [(the speed limit is activated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the pressure on the RCMTECHTERM_gas_pedal decreases below 90
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: the speed limit is activated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [al_144:]
		text:  the maximum deviation of the pulse ratio should be below the cognitive threshold of a human observer.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  the maximum deviation of the pulse ratio should be below the cognitive threshold of a human observer.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the maximum deviation of the pulse ratio should be below the cognitive threshold of a human observer)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the maximum deviation of the pulse ratio should be below the cognitive threshold of a human observer
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_68:]
		text:  if the driver presses the speed limiting lever downwards beyond the first resistance stage and speed limit function is activated, the speed limit is decreased to the next ten’s place.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver presses the speed limiting lever downwards beyond the first resistance stage and speed limit function is activated, the speed limit is decreased to the next ten’s place.
				<Formal-Representation>
				  CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
				  CTL-Formula: AG( [((the driver presses the limiting lever beyond the first resistance stage) AND (the speed limit function is activated))] ==> [(the speed limit is decreased to the next ten ’s place)] ) 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver presses the limiting lever downwards beyond the first resistance stage
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if speed limit function is activated
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the speed limit is decreased to the next ten ’s place
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_32:]
		text:  if the speed limit function is activated, the current speed must not exceed the RCMTECHTERM_set_speed_limit.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the speed limit function is activated, the current speed must not exceed the RCMTECHTERM_set_speed_limit.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(¬ Q)] )
					CTL-Formula: AG( [(the speed limit function is activated)] ==> [(¬ the current speed must not exceed the RCMTECHTERM_set_speed_limit)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the speed limit function is activated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the current speed must not exceed the RCMTECHTERM_set_speed_limit
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_20:]
		text:  if the cruise control is deactivated and the cruise control lever is pulled, the speed set point should be adopted as set speed.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the cruise control is deactivated and the cruise control lever is pulled, the speed set point should be adopted as set speed.
				<Formal-Representation>
						CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: AG( [((the cruise control is deactivated) AND ( the cruise control lever is pulled))] ==> [(he speed set point should be adopted as set speed)] ) 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the cruise control is deactivated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control lever is pulled
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the speed set point should be adopted as set speed
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_64:]
		text:  if the driver pushes down the cruise control lever for more than t seconds and the cruise control is activated within the first resistance level, the target speed of the cruise control is reduced every t seconds by the value n.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver pushes down the cruise control lever for more than t seconds and the cruise control is activated within the first resistance level, the target speed of the cruise control is reduced every t seconds by the value n..
				<Formal-Representation>
				  CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
				  CTL-Formula: AG( [((the driver pushes down the cruise control lever for more than t seconds) AND (the cruise control is activated within the first resistance level))] ==> [(the target speed of the cruise control is reduced every t seconds  by the value n)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver pushes down the cruise control lever for more than t seconds
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control is activated within the first resistance level
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the target speed of the cruise control is reduced every t seconds  by the value n
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-19:]
		text: if tip_blinking was activated shortly before the RCMTECHTERM_hazard_warning_light_switch is deactivated, it shall not be activated while the RCMTECHTERM_hazard_warning_light_switch is deactivated.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if tip_blinking was activated shortly before the RCMTECHTERM_hazard_warning_light_switch is deactivated, it shall not be activated while the RCMTECHTERM_hazard_warning_light_switch is deactivated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: 
					CTL-Formula: 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if tip_blinking was activated shortly
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: before the RCMTECHTERM_hazard_warning_light_switch is deactivated
					C[2]==> Classification: preScope 
					C[3]==> Extracted Text: it shall not be activated
					C[3]==> Classification: act 
					C[4]==> Extracted Text: while the RCMTECHTERM_hazard_warning_light_switch is deactivated
					C[4]==> Classification: actScope 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_84:]
		text:  if an object is ahead of the vehicle and the time of an impact is less than or equal to the time ta seconds, an acoustic signal is issued and the brakes are activated by x. if the time of an impact is less than or equal to the time ta2 that is less than ta, the brake is activated by y. if the time of an impact is less than or equal to the standstill time then the brake is activated by 100.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the time of an impact is less than or equal to the time ta2 that is less than ta, the brake is activated by y..
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) OR (Q))] ==> [(R)] )
					CTL-Formula: AG( [((the time of an impact is less than) OR (the time of an impact equal to the time ta2))] ==> [(the brake is activated by y.)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the time of an impact is less than
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the time of an impact equal to the time ta2 that is less than ta
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the brake is activated by y.
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  if the time of an impact is less than or equal to the standstill time then the brake is activated by 100.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) OR (Q))] ==> [(R)] )
					CTL-Formula: AG( [((the time of an impact is less than) OR (the time of an impact equal to the standstill time))] ==> [(the brake is activated by 100.)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the time of an impact is less than
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the time of an impact equal to the standstill time
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the brake is activated by 100
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-27:]
		text: if the camera recognizes the lights of an RCMTECHTERM_advancing_vehicle, the RCMTECHTERM_high_beam_headlight that is activated is reduced to low beam headlight within 5 seconds.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the camera recognizes the lights of an RCMTECHTERM_advancing_vehicle, the RCMTECHTERM_high_beam_headlight that is activated is reduced to low beam headlight within 5 seconds.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the camera recognizes the lights of an RCMTECHTERM_advancing_vehicle)] ==> [(the RCMTECHTERM_high_beam_headlight is reduced to low beam headlight)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the camera recognizes the lights of an RCMTECHTERM_advancing_vehicle
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the RCMTECHTERM_high_beam_headlight that is activated is reduced to low beam headlight within 5 seconds
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_60:]
		text:  if the driver pulls down the cruise control lever and the cruise control is activated beyond the first resistance level, the speed set point is reduced to next lower ten’s place.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver pulls down the cruise control lever and the cruise control is activated beyond the first resistance level, the speed set point is reduced to next lower ten’s place.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: AG( [((the driver pulls down the cruise control lever) AND (the cruise control is activated beyond the first resistance level))] ==> [(the speed set point is reduced to next lower ten ’s place)] ) 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver pulls down the cruise control lever
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control is activated beyond the first resistance level
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the speed set point is reduced to next lower ten ’s place
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-59:]
		text: when hazard warning is deactivated and the pit arm is in position RCMVAL_direction_blinking_left or RCMVAL_direction_blinking_right, the direction blinking should be released.


		<ReqSentence>
			<PR>
				Id: [1]
				text: when hazard warning is deactivated and the pit arm is in position RCMVAL_direction_blinking_left or RCMVAL_direction_blinking_right, the direction blinking should be released.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: AG( [((hazard warning is deactivated) AND (the pit arm is in RCMVAL_direction_blinking_left))] ==> [(the direction should be released)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when hazard warning is deactivated
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: when the pit arm is in RCMVAL_direction_blinking_left
					C[2]==> Classification: trig 
					C[3]==> Extracted Text: the direction should be released
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-35:]
		text:  if  the RCMTECHTERM_pitman_arm is pulled, the RCMTECHTERM_high_beam_headlight is activated.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if  the RCMTECHTERM_pitman_arm is pulled, the RCMTECHTERM_high_beam_headlight is activated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the RCMTECHTERM_pitman_arm is pulled)] ==> [(the RCMTECHTERM_high_beam_headlight is activated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the RCMTECHTERM_pitman_arm is pulled
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the RCMTECHTERM_high_beam_headlight is activated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-23:]
		text: if the light rotary switch is RCMVAL_automatic, the low beam headlights are activated for at least 3 seconds when the exterior brightness is lower than a threshold RCMVAR_s1. if the exterior brightness exceeds a threshold RCMVAR_s2 that exceeds RCMVAR_s1, the low beam headlights are deactivated for at least 3 seconds.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the light rotary switch is RCMVAL_automatic, the low beam headlights are activated for at least 3 seconds when the exterior brightness is lower than a threshold RCMVAR_s1.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [([(P)] ==> [(Q)])] ==> [(R)] )
					CTL-Formula: AG( [([(the exterior brightness is lower than a threshold RCMVAR_s1)] ==> [(the light rotary switch is RCMVAL_automatic)])] ==> [(the low beam headlights are activated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the light rotary switch is RCMVAL_automatic
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the low beam headlights are activated for at least 3 seconds
					C[2]==> Classification: act 
					C[3]==> Extracted Text: when the exterior brightness is lower than a threshold RCMVAR_s1
					C[3]==> Classification: trig 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  if the exterior brightness exceeds a threshold RCMVAR_s2 that exceeds RCMVAR_s1, the low beam headlights are deactivated for at least 3 seconds.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the exterior brightness exceeds a threshold RCMVAR_s2)] ==> [(the low beam headlights are deactivated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the exterior brightness exceeds a threshold RCMVAR_s2 that exceeds RCMVAR_s1
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the low beam headlights are deactivated for at least 3 seconds
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-31:]
		text: if a subvoltage is present, the RCMTECHTERM_cornering_light should not be available.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if a subvoltage is present, the RCMTECHTERM_cornering_light should not be available.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(¬ Q)] )
					CTL-Formula: AG( [(a subvoltage is present)] ==> [(¬ the RCMTECHTERM_cornering_light should not be available)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a subvoltage is present
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the RCMTECHTERM_cornering_light should not be available
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-63:]
		text: the light illumination area of the RCMTECHTERM_high_beam_headlight is within 100m and 300m


		<ReqSentence>
			<PR>
				Id: [1]
				text: the light illumination area of the RCMTECHTERM_high_beam_headlight is within 100m and 300m.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the light illumination area of the RCMTECHTERM_high_beam_headlight is within 100m)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the light illumination area of the RCMTECHTERM_high_beam_headlight is within 100m
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_4:]
		text:  if the distance to the RCMTECHTERM_vehicle_ahead falls below the specified speed dependent safety distance, the vehicle brakes are activated.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the distance to the RCMTECHTERM_vehicle_ahead falls below the specified speed dependent safety distance, the vehicle brakes are activated.
				<Formal-Representation>
				  CTL-AbbrevatedFormula: AG( [((P))] ==> [(R)] )
				  CTL-Formula: AG( [((the distance to the RCMTECHTERM_vehicle_ahead falls below the specified speed dependent safety distance))] ==> [(the vehicle brakes are activated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the distance to the RCMTECHTERM_vehicle_ahead falls below the specified speed dependent safety distance
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the vehicle brakes are activated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [al_105:]
		text:  if the driver holds the RCMTECHTERM_pitman_arm for at least 5 seconds to RCMVAL_tip_blinking_left, a flashing is released for the left direction indicators before the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver holds the RCMTECHTERM_pitman_arm for at least 5 seconds to RCMVAL_tip_blinking_left, a flashing is released for the left direction indicators before the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [A[((AF((Q) v (R))) v AG(¬(R))) W (R)]] )
					CTL-Formula: AG( [(the driver holds the RCMTECHTERM_pitman_arm to RCMVAL_tip_blinking_left)] ==> [A[((AF((a flashing is released for the left direction indicators) v (the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left))) v AG(¬(the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left))) W (the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left)]] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver holds the RCMTECHTERM_pitman_arm for at least 5 seconds to RCMVAL_tip_blinking_left
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: a flashing is released for the left direction indicators
					C[2]==> Classification: act 
					C[3]==> Extracted Text: before the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left
					C[3]==> Classification: actScope 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_25:]
		text:  if the driver pushes the cruise control lever up to the first resistance level and the cruise control is activated, the speed set point of the cruise control is increased by the value n.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver pushes the cruise control lever up to the first resistance level and the cruise control is activated, the speed set point of the cruise control is increased by the value n..
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: AG( [((the driver pushes the cruise control lever up to the first resistance level) AND (the cruise control is activate))] ==> [(the speed set point of the cruise control is increased by the value n)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver pushes the cruise control lever up to the first resistance level
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control is activated
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the speed set point of the cruise control is increased by the value n.
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [al_145:]
		text:  the reaction time between the activation of the RCMTECHTERM_pitman_arm and the beginning of the first flashing cycle should be below the cognitive threshold of a human observer.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  the reaction time between the activation of the RCMTECHTERM_pitman_arm and the beginning of the first flashing cycle should be below the cognitive threshold of a human observer.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the the the reaction time between the activation of the RCMTECHTERM_pitman_arm the beginning of the first flashing cycle should be below the cognitive threshold of a human observer)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the the the reaction time between the activation of the RCMTECHTERM_pitman_arm the beginning of the first flashing cycle should be below the cognitive threshold of a human observer
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_21:]
		text:  after the start of the motor, if no speed was set and the cruise control lever is pulled, the current vehicle speed is used as speed set point. if the current vehicle speed is below 20km#Div#h, the current vehicle speed is not adopted as speed set point and the cruise control is not activated.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  after the start of the motor, if no speed was set and the cruise control lever is pulled, the current vehicle speed is used as speed set point.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [AG((R) ==> AG(AF(Q)))] )
					CTL-Formula: AG( [(no speed was set)] ==> [AG((the start of the motor) ==> AG(AF(the current vehicle speed is used as speed set point)))] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: after the start of the motor 
					C[1]==> Classification: actScope 
					C[2]==> Extracted Text: if no speed was set
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: after the cruise control lever is pulled
					C[3]==> Classification: preScope 
					C[4]==> Extracted Text: the current vehicle speed is used as speed set point
					C[4]==> Classification: act
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  if the current vehicle speed is below 20km#Div#h, the current vehicle speed is not adopted as speed set point and the cruise control is not activated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [((¬ Q) AND (¬ R))] )
					CTL-Formula: AG( [(the current vehicle speed is  below 20 km #Div h)] ==> [((¬ the current vehicle speed is not adopted as speed set point) AND (¬ the cruise control is not activated))] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the current vehicle speed is below 20 km #Div h
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the current vehicle speed is not adopted as speed set point
					C[2]==> Classification: act 
					C[3]==> Extracted Text: the cruise control is not activated
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_65:]
		text:  if the driver presses the speed limiting lever upwards within the first resistance stage and the speed limit function is activated, the speed limit is increased by n.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver presses the speed limiting lever upwards within the first resistance stage and the speed limit function is activated, the speed limit is increased by n..
				<Formal-Representation>
				  CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
				  CTL-Formula: AG( [((the driver presses the limiting lever upwards within the first resistance stage) AND (the speed limit function is activated))] ==> [(the speed limit is increased by n)] )  
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver presses the limiting lever upwards within the first resistance stage
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the speed limit function is activated
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the speed limit is increased by n.
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_77:]
		text:  if a road sign that indicates a speed limit is recognized when driving and the speed limit function is activated, the speed limit is set to the value f.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if a road sign that indicates a speed limit is recognized when driving and the speed limit function is activated, the speed limit is set to the value f..
				<Formal-Representation>
					CTL-AbbrevatedFormula: 
					CTL-Formula: 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a road sign that indicates a speed limit is recognized
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: when driving the speed limit function is activated
					C[2]==> Classification: trig 
					C[3]==> Extracted Text: the speed limit is set to the value f.
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_61:]
		text:  if the driver pushes up the cruise control lever and the cruise control is activated through the first resistance level for more than t seconds, the speed set point of the cruise control is increased every t seconds to the next ten’s place.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver pushes up the cruise control lever and the cruise control is activated through the first resistance level for more than t seconds, the speed set point of the cruise control is increased every t seconds to the next ten’s place.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: AG( [((the driver pushes up the cruise control lever) AND (the cruise control is activated through the first resistance level for more than t seconds))] ==> [(the speed set point of the cruise control is increased every t seconds to the next ten’s place.)] ) 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver pushes up the cruise control lever
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control is activated through the first resistance level for more than t seconds
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the speed set point of the cruise control is increased every t seconds to the next ten’s place.
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-18:]
		text: the duration of a flashing cycle is 1 second.

		<ReqSentence>
			<PR>
				Id: [1]
				text: the duration of a flashing cycle is 1 second.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the duration of a flashing cycle is 1 second)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the duration of a flashing cycle is 1 second
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_81:]
		text:  the adaptive cruise control system issues acoustic alarm if the calculated distance is less than (current speed #Div# 3) #Mul# RCMVAR_t . it issues visual warning if the calculated distance is less than (current speed #Div# 3) #Mul# RCMVAR_t2 .

		<ReqSentence>
			<PR>
				Id: [1]
				text:  the adaptive cruise control system issues acoustic alarm if the calculated distance is less than (current speed #Div# 3) #Mul# RCMVAR_t .
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the calculated distance is less than current speed #Div)] ==> [(the adaptive cruise control system issues acoustic alarm)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the adaptive cruise control system issues acoustic alarm
					C[1]==> Classification: act 
					C[2]==> Extracted Text: if the calculated distance is less than current speed #Div
					C[2]==> Classification: cond 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  it issues visual warning if the calculated distance is less than (current speed #Div# 3) #Mul# RCMVAR_t2 .
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the calculated distance is less than current speed #Div)] ==> [(it issues visual warning)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: it issues visual warning
					C[1]==> Classification: act 
					C[2]==> Extracted Text: if the calculated distance is less than current speed #Div
					C[2]==> Classification: cond 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-26:]
		text: if the light rotary switch is RCMVAL_auto, the adaptive RCMTECHTERM_high_beam_headlights are activated.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the light rotary switch is RCMVAL_auto, the adaptive RCMTECHTERM_high_beam_headlights are activated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the light rotary switch is RCMVAL_auto)] ==> [(the adaptive RCMTECHTERM_high_beam_headlights are activated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the light rotary switch is RCMVAL_auto
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the adaptive RCMTECHTERM_high_beam_headlights are activated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-14:]
		text: the cognitive threshold of a human observer shall be set to the deviation that is less than 5.

		<ReqSentence>
			<PR>
				Id: [1]
				text: the cognitive threshold of a human observer shall be set to the deviation that is less than 5.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the cognitive threshold of a human observer shall be set to the deviation)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the cognitive threshold of a human observer shall be set to the deviation that is less than 5
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-34:]
		text: if RCMTECHTERM_advancing_vehicle is not recognized, the high beam illumination is restored within 2 seconds.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if RCMTECHTERM_advancing_vehicle is not recognized, the high beam illumination is restored within 2 seconds.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(¬ P)] ==> [(Q)] )
					CTL-Formula: AG( [(¬ RCMTECHTERM_advancing_vehicle is not recognized)] ==> [(the high beam illumination is restored)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if RCMTECHTERM_advancing_vehicle is not recognized
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the high beam illumination is restored within 2 seconds
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-22:]
		text: if the daytime running light is activated, the low beam headlights are activated after starting the engine if the ignition key is in the ignition lock. when the ambient light is activated, the low beam headlights remain active

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the daytime running light is activated, the low beam headlights are activated after starting the engine if the ignition key is in the ignition lock.
				<Formal-Representation>
					CTL-AbbrevatedFormula: 
					CTL-Formula: 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the daytime running light is activated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the low beam headlights are activated
					C[2]==> Classification: act 
					C[3]==> Extracted Text: after starting the engine
					C[3]==> Classification: actScope 
					C[4]==> Extracted Text: if the ignition key is in the ignition lock
					C[4]==> Classification: cond 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  when the ambient light is activated, the low beam headlights remain active.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the ambient light is activated)] ==> [(the low beam headlights remain active)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the ambient light is activated
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: the low beam headlights remain active
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-66:]
		text: if the light rotary switch is RCMVAL_off or RCMVAL_exterior_light_on, when the RCMTECHTERM_pitman_arm is pulled, the RCMTECHTERM_high_beam_headlight shall be activated.



		<ReqSentence>
			<PR>
				Id: [1]
				text: if the light rotary switch is RCMVAL_off or RCMVAL_exterior_light_on, when the RCMTECHTERM_pitman_arm is pulled, the RCMTECHTERM_high_beam_headlight shall be activated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [([(P)] ==> [(Q)])] ==> [(R)] )
					CTL-Formula: AG( [([(the RCMTECHTERM_pitman_arm is pulled)] ==> [(the light rotary switch is RCMVAL_off)])] ==> [(the RCMTECHTERM_high_beam_headlight shall be activated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the light rotary switch is RCMVAL_off
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: when the RCMTECHTERM_pitman_arm is pulled
					C[2]==> Classification: trig 
					C[3]==> Extracted Text: the RCMTECHTERM_high_beam_headlight shall be activated
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-30:]
		text: if a subvoltage is present, the ambient light should not be available.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if a subvoltage is present, the ambient light should not be available.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(¬ Q)] )
					CTL-Formula: AG( [(a subvoltage is present)] ==> [(¬ the ambient light should not be available)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a subvoltage is present
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the ambient light should not be available
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-62:]
		text: if the ambient light is activated, the low beam headlights are activated when at least one door of the vehicle is opened and the exterior brightness outside the vehicle is lower than the threshold s1. the low beam headlights are deactivated when all vehicle doors are closed.


		<ReqSentence>
			<PR>
				Id: [1]
				text: if the ambient light is activated, the low beam headlights are activated when at least one door of the vehicle is opened and the exterior brightness outside the vehicle is lower than the threshold s1.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(activated)] ==> [(the exterior brightness outside the vehicle is lower)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the ambient light is activated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the low beam headlights are activated
					C[2]==> Classification: act 
					C[3]==> Extracted Text: when at least one door of the vehicle is opened
					C[3]==> Classification: trig 
					C[4]==> Extracted Text: the exterior brightness outside the vehicle is lower than the threshold s1
					C[4]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  the low beam headlights are deactivated when all vehicle doors are closed.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(all vehicle doors are closed)] ==> [(the low beam headlights are deactivated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the low beam headlights are deactivated
					C[1]==> Classification: act 
					C[2]==> Extracted Text: when all vehicle doors are closed
					C[2]==> Classification: trig 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_5:]
		text:  if the maximum deceleration is RCMVAL_insufficient_to_stop before a collision with the RCMTECHTERM_vehicle_ahead, the vehicle warns the driver by acoustical signals for 1 seconds every 2 seconds. the maximum deceleration is 5.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the maximum deceleration is RCMVAL_insufficient_to_stop before a collision with the RCMTECHTERM_vehicle_ahead, the vehicle warns the driver by acoustical signals for 1 seconds every 2 seconds.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [A[((AF((Q) v (P))) v AG(¬(P))) W (P)]] ==> [(R)] )
					CTL-Formula: AG( [A[((AF((the maximum deceleration is RCMVAL_insufficient_to_stop) v (a collision with the RCMTECHTERM_vehicle_ahead))) v AG(¬(a collision with the RCMTECHTERM_vehicle_ahead))) W (a collision with the RCMTECHTERM_vehicle_ahead)]] ==> [(the vehicle warns the driver by acoustical signals)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the maximum deceleration is RCMVAL_insufficient_to_stop
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: before a collision with the RCMTECHTERM_vehicle_ahead
					C[2]==> Classification: preScope 
					C[3]==> Extracted Text: the vehicle warns the driver by acoustical signals for 1 seconds every 2 seconds
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  the maximum deceleration is 5.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the maximum deceleration is 5)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the maximum deceleration is 5
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_26:]
		text:  if the driver pushes down the cruise control lever and the cruise control is activated up to the first resistance level, the speed set point of the cruise control is reduced by n.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver pushes down the cruise control lever and the cruise control is activated up to the first resistance level, the speed set point of the cruise control is reduced by n..
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: AG( [((the driver pushes down the cruise control lever) AND (the cruise control is activated up to the first resistance level))] ==> [(the speed set point of the cruise control is reduced by n.)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver pushes down the cruise control lever
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control is activated up to the first resistance level
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the speed set point of the cruise control is reduced by n.
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_78:]
		text:  when turning the cruise control lever and the velocity window exceeds 20km#Div#h, the distance to the RCMTECHTERM_vehicle_ahead can be set to the selected level from three levels. the three levels are 2 seconds, 2.5 seconds and 3 seconds.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  when turning the cruise control lever and the velocity window exceeds 20km#Div#h, the distance to the RCMTECHTERM_vehicle_ahead can be set to the selected level from three levels.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(turning)] ==> [(the velocity window exceeds)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when turning the cruise control lever the velocity window exceeds 20 km #Div # h
					C[1]==> Classification: act 
					C[2]==> Extracted Text: the distance to the RCMTECHTERM_vehicle_ahead can be set to the selected level from three levels
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  the three levels are 2 seconds, 2.5 seconds and 3 seconds.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the three levels are 2 seconds 2.5 seconds and 3 seconds.)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the three levels are 2 seconds 2.5 seconds and 3 seconds.
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_22:]
		text:  if the cruise control is deactivated and the cruise control lever is moved up or down, the current vehicle speed is used as speed set point.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the cruise control is deactivated and the cruise control lever is moved up or down, the current vehicle speed is used as speed set point.
				<Formal-Representation>
					CTL-AbbrevatedFormula: 
					CTL-Formula: 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the cruise control is deactivated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control lever is moved up
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the current vehicle speed is used as speed set point
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_66:]
		text:  if the driver presses the speed limiting lever upwards above the first resistance stage and speed limit function is activated, the speed limit is increased to the next ten’s place.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver presses the speed limiting lever upwards above the first resistance stage and speed limit function is activated, the speed limit is increased to the next ten’s place.
				<Formal-Representation>
				  CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
				  CTL-Formula: AG( [((the driver presses the limiting lever upwards above the first resistance stage) AND (the speed limit function is activated))] ==> [(the speed limit is increased to the next ten ’s place)] )   
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver presses the limiting lever upwards above the first resistance stage
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if speed limit function is activated
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the speed limit is increased to the next ten ’s place
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_86:]
		text:  when the velocity window is below 20, the distance to the RCMTECHTERM_vehicle_ahead shall be calculated.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the velocity window is below 20, the distance to the RCMTECHTERM_vehicle_ahead shall be calculated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the velocity window is below 20)] ==> [(the distance to the RCMTECHTERM_vehicle_ahead shall be calculated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the velocity window is below 20
					C[1]==> Classification: trig 
					C[2]==> Extracted Text: the distance to the RCMTECHTERM_vehicle_ahead shall be calculated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-29:]
		text: if a subvoltage is present, the adaptive RCMTECHTERM_high_beam_headlight should not be available.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if a subvoltage is present, the adaptive RCMTECHTERM_high_beam_headlight should not be available.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(¬ Q)] )
					CTL-Formula: AG( [(a subvoltage is present)] ==> [(¬ the adaptive RCMTECHTERM_high_beam_headlight should not be available)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a subvoltage is present
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the adaptive RCMTECHTERM_high_beam_headlight should not be available
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [fa_62:]
		text:  if the driver pushes up the cruise control lever for more than t seconds and the cruise control is activated within the first resistance level, the target speed of the cruise control is increased every t seconds by the value n.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the driver pushes up the cruise control lever for more than t seconds and the cruise control is activated within the first resistance level, the target speed of the cruise control is increased every t seconds by the value n.
				<Formal-Representation>
				  CTL-AbbrevatedFormula: AG( [((P) AND (Q))] ==> [(R)] )
				  CTL-Formula: AG( [((the driver pushes up the cruise control lever for more than t seconds) AND (the cruise control is activated within the first resistance level))] ==> [(the target speed of the cruise control is increased every t seconds by the value n.)] )  
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver pushes up the cruise control lever for more than t seconds
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the cruise control is activated within the first resistance level
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the target speed of the cruise control is increased every t seconds by the value n.
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-17:]
		text:  if  an emergency situation, the RCMTECHTERM_hazard_warning_light_switch is active before the car battery is empty.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if  an emergency situation, the RCMTECHTERM_hazard_warning_light_switch is active before the car battery is empty.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [A[((AF((P) v (Q))) v AG(¬(Q))) W (Q)]] )
					CTL-Formula: AG( [A[((AF((the RCMTECHTERM_hazard_warning_light_switch is active) v (the car battery is empty))) v AG(¬(the car battery is empty))) W (the car battery is empty)]] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the RCMTECHTERM_hazard_warning_light_switch is active
					C[1]==> Classification: act 
					C[2]==> Extracted Text: before the car battery is empty
					C[2]==> Classification: actScope 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-25:]
		text: if the darkness switch is activated, the RCMTECHTERM_cornering_light is not activated.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the darkness switch is activated, the RCMTECHTERM_cornering_light is not activated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(¬ Q)] )
					CTL-Formula: AG( [(the darkness switch is activated)] ==> [(¬ the RCMTECHTERM_cornering_light is not activated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the darkness switch is activated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the RCMTECHTERM_cornering_light is not activated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-57:]
		text: if the driver moves the RCMTECHTERM_pitman_arm to (tip_blinking left) for less than 1 second, all left direction indicators should flash. if the driver activates the RCMTECHTERM_pitman_arm in another direction or activates the RCMTECHTERM_hazard_warning_light_switch while the flashing, the requested flashing must be released.


		<ReqSentence>
			<PR>
				Id: [1]
				text: if the driver moves the RCMTECHTERM_pitman_arm to (tip_blinking left) for less than 1 second, all left direction indicators should flash.
				<Formal-Representation>
					CTL-AbbrevatedFormula: A( [(P)] ==> [(Q)] )
					CTL-Formula: A( [(the driver moves the RCMTECHTERM_pitman_arm to tip_blinking left for less than 1 second)] ==> [(all left direction indicators should flash)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver moves the RCMTECHTERM_pitman_arm to tip_blinking left for less than 1 second
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: all left direction indicators should flash
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  if the driver activates the RCMTECHTERM_pitman_arm in another direction or activates the RCMTECHTERM_hazard_warning_light_switch while the flashing, the requested flashing must be released.
				<Formal-Representation>
					CTL-AbbrevatedFormula: 
					CTL-Formula: CTL-AbbrevatedFormula: AG( [((P) OR (Q))] ==> [(R)] )
					CTL-Formula: AG( [(the driver activates the RCMTECHTERM_pitman_arm in another direction) OR (the driver activates the RCMTECHTERM_hazard_warning_light_switch while the flashing))] ==> [(the requested flashing must be released)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the driver activates the RCMTECHTERM_pitman_arm in another direction
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: if the driver activates the RCMTECHTERM_hazard_warning_light_switch while the flashing
					C[2]==> Classification: cond 
					C[3]==> Extracted Text: the requested flashing must be released
					C[3]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-33:]
		text: if an overvoltage is present, the headlight must be activated.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if an overvoltage is present, the headlight must be activated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(an overvoltage is present)] ==> [(the headlight must be activated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if an overvoltage is present
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the headlight must be activated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-21:]
		text: the driver activates the low beam headlights when turning the light rotary switch to RCMVAL_exterior_lights_on.

		<ReqSentence>
			<PR>
				Id: [1]
				text: the driver activates the low beam headlights when turning the light rotary switch to RCMVAL_exterior_lights_on.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(turning the light rotary switch to RCMVAL_exterior_lights_on)] ==> [(the driver activates the low beam headlights)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the driver activates the low beam headlights
					C[1]==> Classification: act 
					C[2]==> Extracted Text: when turning the light rotary switch to RCMVAL_exterior_lights_on
					C[2]==> Classification: trig 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-65:]
		text: if the RCMTECHTERM_pitman_arm is moved to RCMVAL_horizontal_neutral, the adaptive RCMTECHTERM_high_beam_headlight is deactivated. the illumination of the street is reduced to low beam headlights.


		<ReqSentence>
			<PR>
				Id: [1]
				text: if the RCMTECHTERM_pitman_arm is moved to RCMVAL_horizontal_neutral, the adaptive RCMTECHTERM_high_beam_headlight is deactivated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] ==> [(Q)] )
					CTL-Formula: AG( [(the RCMTECHTERM_pitman_arm is moved to RCMVAL_horizontal_neutral)] ==> [(the adaptive RCMTECHTERM_high_beam_headlight is deactivated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the RCMTECHTERM_pitman_arm is moved to RCMVAL_horizontal_neutral
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the adaptive RCMTECHTERM_high_beam_headlight is deactivated
					C[2]==> Classification: act 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text:  the illumination of the street is reduced to low beam headlights.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [(P)] )
					CTL-Formula: AG( [(the illumination of the street is reduced to low beam headlights)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the illumination of the street is reduced to low beam headlights
					C[1]==> Classification: act 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-61:]
		text: if the low beam headlights are activated and the direction blinking is requested, the RCMTECHTERM_cornering_light is activated, when the vehicle drives slower than 10 km#Div#h


		<ReqSentence>
			<PR>
				Id: [1]
				text: if the low beam headlights are activated and the direction blinking is requested, the RCMTECHTERM_cornering_light is activated, when the vehicle drives slower than 10 km#Div#h.
				<Formal-Representation>
					CTL-AbbrevatedFormula: AG( [([(P)] ==> [((Q) AND (R))])] ==> [(S)] )
					CTL-Formula: AG( [([(the vehicle drives slower #Div h.)] ==> [((the low beam headlights are activated) AND (the RCMTECHTERM_cornering_light is activated))])] ==> [(the direction is requested)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the low beam headlights are activated
					C[1]==> Classification: cond 
					C[2]==> Extracted Text: the direction is requested
					C[2]==> Classification: act 
					C[3]==> Extracted Text: if the RCMTECHTERM_cornering_light is activated
					C[3]==> Classification: cond 
					C[4]==> Extracted Text: when the vehicle drives slower than 10 km #Div h.
					C[4]==> Classification: trig 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

</SucceededRequirement>
</log>
