<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
File Measures: 
	Number of req in file = 28
	Number of req sentences in file = 29
<FailedRequirement>
</FailedRequirement>
<SucceededRequirement>
	<Requirement>
		ID: [req_48c4:]
		text:  if a confirmation button is available, and the confirmation_yes is pressed, the next confirmation_yes is disabled.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if a confirmation button is available, and the confirmation_yes is pressed, the next confirmation_yes is disabled.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((a confirmation button is available) AND (the confirmation_yes is pressed))] ==> [(the next confirmation_yes is disabled)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a confirmation button is available
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the confirmation_yes is pressed
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the next confirmation_yes is disabled
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_48c2:]
		text:  if a confirmation button is available, and the confirmation_yes is pressed, the manual mode is started.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if a confirmation button is available, and the confirmation_yes is pressed, the manual mode is started.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((a confirmation button is available) AND (the confirmation_yes is pressed))] ==> [(the manual mode is started)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a confirmation button is available
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the confirmation_yes is pressed
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the manual mode is started
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_48c6:]
		text:  if a confirmation button is available and the terminate auto control button is pressed, the next terminate auto control button is disabled.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if a confirmation button is available and the terminate auto control button is pressed, the next terminate auto control button is disabled.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((a confirmation button is available) AND (the terminate auto control button is pressed))] ==> [(the next terminate auto control button is disabled)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a confirmation button is available
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the terminate auto control button is pressed
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the next terminate auto control button is disabled
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_16:]
		text:  if a pump is plugged in, and an infusate is ready, and the occlusion line is clear, the auto control mode can be started.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if a pump is plugged in, and an infusate is ready, and the occlusion line is clear, the auto control mode can be started.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND ((Q) AND (R)))] ==> [(S)] )
					CTL-Formula: GF( [((a pump is plugged in) AND ((an infusate is ready) AND (the occlusion line is clear)))] ==> [(the auto control mode can be started)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a pump is plugged in
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if an infusate is ready
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the occlusion line is clear
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the auto control mode can be started
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_08:]
		text:  if the air ok signal is low, the auto control mode is terminated within 3 sec.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the air ok signal is low, the auto control mode is terminated within 3 sec.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the air ok signal is low)] ==> [(the auto control mode is terminated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the air ok signal is low
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the auto control mode is terminated within 3 sec
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_28:]
		text:  if a valid blood pressure is unavailable after at least 180 sec, the manual mode should be triggered.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if a valid blood pressure is unavailable after at least 180 sec, the manual mode should be triggered.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(a valid blood pressure is unavailable)] ==> [(the manual mode should be triggered)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a valid blood pressure is unavailable after at least 180 sec
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the manual mode should be triggered
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_17c5:]
		text:  when the override selection is provided, if the override_yes is pressed, and the arterial line is corroborated, and the pulse wave is not corroborated, the next pulse wave is selected.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the override selection is provided, if the override_yes is pressed, and the arterial line is corroborated, and the pulse wave is not corroborated, the next pulse wave is selected.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [([(P)]  AND ((Q) AND ((R) AND (¬ S))))] ==> [(T)] )
					CTL-Formula: GF( [([(the override selection is provided)]  AND ((the override_yes is pressed) AND ((the arterial line is corroborated) AND (¬ the pulse wave is not corroborated))))] ==> [(the next pulse wave is selected)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the override selection is provided
					C[1]==> Classification: Trigger 
					C[2]==> Extracted Text: if the override_yes is pressed
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the arterial line is corroborated
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: if the pulse wave is not corroborated
					C[4]==> Classification: Condition 
					C[5]==> Extracted Text: the next pulse wave is selected
					C[5]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_17c1:]
		text:  when the auto control mode is running, the cuff will be inflated.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the auto control mode is running, the cuff will be inflated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the auto control mode is running)] ==> [(the cuff will be inflated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the auto control mode is running
					C[1]==> Classification: Trigger 
					C[2]==> Extracted Text: the cuff will be inflated
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_34:]
		text:  when the auto control mode is running, the terminate auto control button should be available.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the auto control mode is running, the terminate auto control button should be available.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the auto control mode is running)] ==> [(the terminate auto control button should be available)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the auto control mode is running
					C[1]==> Classification: Trigger 
					C[2]==> Extracted Text: the terminate auto control button should be available
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_44:]
		text:  if the pulse wave and the arterial line are unavailable, and cuff is selected, and the blood pressure is not valid, the next the manual mode is started.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the pulse wave and the arterial line are unavailable, and cuff is selected, and the blood pressure is not valid, the next the manual mode is started.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(((P) AND (Q)) AND ((R) AND (¬ S)))] ==> [(T)] )
					CTL-Formula: GF( [(((the pulse wave are unavailable) AND (the arterial line are unavailable)) AND ((cuff is selected) AND (¬ the blood pressure is not valid)))] ==> [(the next the manual mode is started)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the pulse wave are unavailable
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the arterial line are unavailable
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if cuff is selected
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: if the blood pressure is not valid
					C[4]==> Classification: Condition 
					C[5]==> Extracted Text: the next the manual mode is started
					C[5]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_13c1:]
		text:  if the arterial line and the pulse wave are corroborated, and the cuff is available, the next the arterial line is selected.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the arterial line and the pulse wave are corroborated, and the cuff is available, the next the arterial line is selected.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(((P) AND (Q)) AND (R))] ==> [(S)] )
					CTL-Formula: GF( [(((the arterial line are corroborated) AND (the pulse wave are corroborated)) AND (the cuff is available))] ==> [(the next the arterial line is selected)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the arterial line are corroborated
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the pulse wave are corroborated
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the cuff is available
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the next the arterial line is selected
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_54:]
		text:  if auto control mode is running, and the impedance reading is unavailable, the next auto control model is terminated.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if auto control mode is running, and the impedance reading is unavailable, the next auto control model is terminated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((auto control mode is running) AND (the impedance reading is unavailable))] ==> [(the next auto control model is terminated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if auto control mode is running
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the impedance reading is unavailable
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the next auto control model is terminated
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_20:]
		text:  if the manual mode is running and the start auto control button is pressed, the next corroboration is triggered.


		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the manual mode is running and the start auto control button is pressed, the next corroboration is triggered.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the manual mode is running) AND (the start auto control button is pressed))] ==> [(the next corroboration is triggered)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the manual mode is running
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the start auto control button is pressed
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the next corroboration is triggered
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_32c1:]
		text:  if the pulse wave or the arterial line is available, and cuff is selected, corroboration is triggered.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the pulse wave or the arterial line is available, and cuff is selected, corroboration is triggered.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(((P) OR (Q)) AND (R))] ==> [(S)] )
					CTL-Formula: GF( [(((the pulse wave is available) OR (the arterial line is available)) AND (cuff is selected))] ==> [(corroboration is triggered)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the pulse wave is available
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the arterial line is available
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if cuff is selected
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: corroboration is triggered
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_42:]
		text:  when the auto control mode is running, and the arterial line or the pulse wave or cuff is lost, an alarm should sound in 60 seconds.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the auto control mode is running, and the arterial line or the pulse wave or cuff is lost, an alarm should sound in 60 seconds.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND ((Q) OR (R)))] ==> [(S)] )
					CTL-Formula: GF( [((the auto control mode is running) AND ((the arterial line is lost) OR (the pulse wave is lost)))] ==> [(an alarm should sound)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the auto control mode is running
					C[1]==> Classification: Trigger 
					C[2]==> Extracted Text: when the arterial line is lost
					C[2]==> Classification: Trigger 
					C[3]==> Extracted Text: when the pulse wave is lost
					C[3]==> Classification: Trigger 
					C[4]==> Extracted Text: an alarm should sound in 60 seconds
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_48c3:]
		text:  if a confirmation button is available, and the confirmation_no is pressed, the auto control mode is running.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if a confirmation button is available, and the confirmation_no is pressed, the auto control mode is running.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((a confirmation button is available) AND (the confirmation_no is pressed))] ==> [(the auto control mode is running)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a confirmation button is available
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the confirmation_no is pressed
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the auto control mode is running
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_48c1:]
		text:  when the terminate auto control button is selected, a confirmation button is available.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the terminate auto control button is selected, a confirmation button is available.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the terminate auto control button is selected)] ==> [(a confirmation button is available)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the terminate auto control button is selected
					C[1]==> Classification: Trigger 
					C[2]==> Extracted Text: a confirmation button is available
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_17c7:]
		text:  if the cuff and the arterial line and the pulse wave are not available, the next manual mode is started.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the cuff and the arterial line and the pulse wave are not available, the next manual mode is started.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((¬ P) AND (¬ Q))] ==> [(R)] )
					CTL-Formula: GF( [((¬ the cuff are not available) AND (¬ the arterial line are not available))] ==> [(the next manual mode is started)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the cuff are not available
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the arterial line are not available
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the next manual mode is started
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_48c5:]
		text:  if a confirmation button is available, and the confirmation_no is pressed, the next confirmation_no is disabled.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if a confirmation button is available, and the confirmation_no is pressed, the next confirmation_no is disabled.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((a confirmation button is available) AND (the confirmation_no is pressed))] ==> [(the next confirmation_no is disabled)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if a confirmation button is available
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the confirmation_no is pressed
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the next confirmation_no is disabled
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_49:]
		text:  when a the start auto control button is enabled, the start auto control button is enabled before it is pressed.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when a the start auto control button is enabled, the start auto control button is enabled before it is pressed.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [A[((AF((Q) v (R))) v AG(¬(R))) W (R)]] )
					CTL-Formula: GF( [(the start auto control button is enabled)] ==> [A[((AF((the start auto control button is enabled) v (it is pressed))) v AG(¬(it is pressed))) W (it is pressed)]] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when a the start auto control button is enabled
					C[1]==> Classification: Trigger 
					C[2]==> Extracted Text: the start auto control button is enabled
					C[2]==> Classification: Action 
					C[3]==> Extracted Text: before it is pressed
					C[3]==> Classification: ActionScope 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_07:]
		text:  if an occlusion is detected, and the auto control mode is running, the auto control mode will be terminated.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if an occlusion is detected, and the auto control mode is running, the auto control mode will be terminated.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((an occlusion is detected) AND (the auto control mode is running))] ==> [(the auto control mode will be terminated)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if an occlusion is detected
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the auto control mode is running
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the auto control mode will be terminated
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [r_13c3:]
		text:  if the arterial line is not corroborated, and the pulse wave is not corroborated, and the cuff is available, the cuff is selected.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the arterial line is not corroborated, and the pulse wave is not corroborated, and the cuff is available, the cuff is selected.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((¬ P) AND ((¬ Q) AND (R)))] ==> [(S)] )
					CTL-Formula: GF( [((¬ the arterial line is not corroborated) AND ((¬ the pulse wave is not corroborated) AND (the cuff is available)))] ==> [(the cuff is selected)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the arterial line is not corroborated
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the pulse wave is not corroborated
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the cuff is available
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the cuff is selected
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_32c2:]
		text:  if the pulse wave is selected, and the arterial line is available, corroboration is triggered.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the pulse wave is selected, and the arterial line is available, corroboration is triggered.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the pulse wave is selected) AND (the arterial line is available))] ==> [(corroboration is triggered)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the pulse wave is selected
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the arterial line is available
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: corroboration is triggered
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_17c6:]
		text:  when the override selection is provided, if the override_no is pressed, the next manual mode is started.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the override selection is provided, if the override_no is pressed, the next manual mode is started.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [([(P)] ==> [(Q)])] ==> [(R)] )
					CTL-Formula: GF( [([(the override selection is provided)] ==> [(the override_no is pressed)])] ==> [(the next manual mode is started)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the override selection is provided
					C[1]==> Classification: Trigger 
					C[2]==> Extracted Text: if the override_no is pressed
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the next manual mode is started
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_17c4:]
		text:  when the override selection is provided, if the override_yes is pressed, and the arterial line is not corroborated, the next arterial line is selected.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  when the override selection is provided, if the override_yes is pressed, and the arterial line is not corroborated, the next arterial line is selected.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [([(P)]  AND [((Q) AND (¬ R))])] ==> [(S)] )
					CTL-Formula: GF( [([(the override selection is provided)]  AND [((the override_yes is pressed) AND (¬ the arterial line is not corroborated))])] ==> [(the next arterial line is selected)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the override selection is provided
					C[1]==> Classification: Trigger 
					C[2]==> Extracted Text: if the override_yes is pressed
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the arterial line is not corroborated
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the next arterial line is selected
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_01:]
		text:  the cara will be operational when the RCMVAR_lstat is RCMVAL_poweredon.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  the cara will be operational when the RCMVAR_lstat is RCMVAL_poweredon.
				<Formal-Representation>
					CTL-AbbrevatedFormula: F( [(P)] ==> [(Q)] )
					CTL-Formula: F( [(the RCMVAR_lstat is RCMVAL_poweredon)] ==> [(the cara will be operational)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the cara will be operational 
					C[1]==> Classification: Action 
					C[2]==> Extracted Text: will be operational when the RCMVAR_lstat is RCMVAL_poweredon
					C[2]==> Classification: Trigger 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_17c2:]
		text:  if the start auto control button is pressed, and the cuff is not available, an alarm is issued and the override selection is provided.
req_17c3: if the alarm_reset_button is pressed, the alarm is disabled.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the start auto control button is pressed, and the cuff is not available, an alarm is issued and the override selection is provided.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (¬ Q))] ==> [((R) AND (S))] )
					CTL-Formula: GF( [((the start auto control button is pressed) AND (¬ the cuff is not available))] ==> [((an alarm is issued) AND (the override selection is provided))] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the start auto control button is pressed
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the cuff is not available
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: an alarm is issued
					C[3]==> Classification: Action 
					C[4]==> Extracted Text: the override selection is provided
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
			<PR>
				Id: [2]
				text: req_17c3: if the alarm_reset_button is pressed, the alarm is disabled.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the alarm_reset_button is pressed)] ==> [(the alarm is disabled)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the alarm_reset_button is pressed
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the alarm is disabled
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [req_13c2:]
		text:  if the pulse wave is corroborated, and the cuff is available, and the arterial line is not corroborated, the next pulse wave is selected.

		<ReqSentence>
			<PR>
				Id: [1]
				text:  if the pulse wave is corroborated, and the cuff is available, and the arterial line is not corroborated, the next pulse wave is selected.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND ((Q) AND (¬ R)))] ==> [(S)] )
					CTL-Formula: GF( [((the pulse wave is corroborated) AND ((the cuff is available) AND (¬ the arterial line is not corroborated)))] ==> [(the next pulse wave is selected)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the pulse wave is corroborated
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the cuff is available
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the arterial line is not corroborated
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the next pulse wave is selected
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

</SucceededRequirement>
</log>
