<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
File Measures: 
	Number of req in file = 36
	Number of req sentences in file = 36
<FailedRequirement>
</FailedRequirement>
<SucceededRequirement>
	<Requirement>
		ID: [TempReqId-1:]
		text: if the regulator mode equals RCMVAL_init , the output regulator status shall be set to RCMVAL_init .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode equals RCMVAL_init , the output regulator status shall be set to RCMVAL_init .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the regulator mode equals RCMVAL_init)] ==> [(the output regulator status shall be set to RCMVAL_init)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode equals RCMVAL_init
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the output regulator status shall be set to RCMVAL_init
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-18:]
		text: if the monitor mode equals RCMVAL_failed , the regulator mode shall never be set to RCMVAL_normal .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor mode equals RCMVAL_failed , the regulator mode shall never be set to RCMVAL_normal .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the monitor mode equals RCMVAL_failed)] ==> [(the regulator mode shall never be set to RCMVAL_normal)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor mode equals RCMVAL_failed
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the regulator mode shall never be set to RCMVAL_normal
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-28:]
		text: if the regulator interface failure is set to RCMVAL_true or the regulator internal failure is set to RCMVAL_true or the status attribute of the current temperature is not set to RCMVAL_valid , the regulator status shall be set to RCMVAL_false.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator interface failure is set to RCMVAL_true or the regulator internal failure is set to RCMVAL_true or the status attribute of the current temperature is not set to RCMVAL_valid , the regulator status shall be set to RCMVAL_false.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) OR (Q) OR (¬ R))] ==> [(S)] )
					CTL-Formula: GF( [((the regulator interface failure is set to RCMVAL_true) OR (the regulator internal failure is set to RCMVAL_true) OR (¬ the status attribute of the current temperature is not set to RCMVAL_valid))] ==> [(the regulator status shall be set to RCMVAL_false)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator interface failure is set to RCMVAL_true
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the regulator internal failure is set to RCMVAL_true
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the status attribute of the current temperature is not set to RCMVAL_valid
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the regulator status shall be set to RCMVAL_false
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-16:]
		text: if the monitor status equals RCMVAL_false , the monitor init timeout shall be set to RCMVAL_true .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor status equals RCMVAL_false , the monitor init timeout shall be set to RCMVAL_true .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the monitor status equals RCMVAL_false)] ==> [(the monitor init timeout shall be set to RCMVAL_true)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor status equals RCMVAL_false
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the monitor init timeout shall be set to RCMVAL_true
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-26:]
		text: if the monitor mode equals RCMVAL_normal, and the temp attribute of the current temperature is less than the temp attribute of the lower temperature, or greater than the temp attribute of the upper temperature, the alarm control shall be set to RCMVAL_control_on.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor mode equals RCMVAL_normal, and the temp attribute of the current temperature is less than the temp attribute of the lower temperature, or greater than the temp attribute of the upper temperature, the alarm control shall be set to RCMVAL_control_on.
				<Formal-Representation>
					CTL-AbbrevatedFormula: 
					CTL-Formula: 
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor mode equals RCMVAL_normal
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the temp attribute of the current temperature is less than the temp attribute of the lower temperature
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the temp attribute of the current temperature greater
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: than the temp attribute of the upper temperature
					C[4]==> Classification: Action 
					C[5]==> Extracted Text: the alarm control shall be set to RCMVAL_control_on
					C[5]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-14:]
		text: the monitor mode shall be initialized to RCMVAL_init .

		<ReqSentence>
			<PR>
				Id: [1]
				text: the monitor mode shall be initialized to RCMVAL_init .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] )
					CTL-Formula: GF( [(the monitor mode shall be initialized to RCMVAL_init)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the monitor mode shall be initialized to RCMVAL_init
					C[1]==> Classification: FactualRule 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-36:]
		text: if the monitor mode is set to RCMVAL_init and the monitor init timeout is set to RCMVAL_true, the monitor mode shall be set to RCMVAL_failed .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor mode is set to RCMVAL_init and the monitor init timeout is set to RCMVAL_true, the monitor mode shall be set to RCMVAL_failed .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the monitor mode is set to RCMVAL_init) AND (the monitor init timeout is set to RCMVAL_true))] ==> [(the monitor mode shall be set to RCMVAL_failed)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor mode is set to RCMVAL_init
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the monitor init timeout is set to RCMVAL_true
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the monitor mode shall be set to RCMVAL_failed
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-24:]
		text: if the status attribute of the lower temperature or the upper temperature equals invalid , the monitor interface failure shall be set to RCMVAL_true.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the status attribute of the lower temperature or the upper temperature equals invalid , the monitor interface failure shall be set to RCMVAL_true.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) OR (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the status attribute of the lower temperature equals invalid) OR (the status attribute of the lower temperature equals invalid))] ==> [(the monitor interface failure shall be set to RCMVAL_true)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the status attribute of the lower temperature the upper temperature equals invalid
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the monitor interface failure shall be set to RCMVAL_true
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-12:]
		text: if the regulator status equals RCMVAL_true , the regulator init timeout shall be set to RCMVAL_false .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator status equals RCMVAL_true , the regulator init timeout shall be set to RCMVAL_false .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the regulator status equals RCMVAL_true)] ==> [(the regulator init timeout shall be set to RCMVAL_false)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator status equals RCMVAL_true
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the regulator init timeout shall be set to RCMVAL_false
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-34:]
		text: if the monitor mode is set to RCMVAL_init and the monitor status is set to RCMVAL_true, the monitor mode shall be set to RCMVAL_normal .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor mode is set to RCMVAL_init and the monitor status is set to RCMVAL_true, the monitor mode shall be set to RCMVAL_normal .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the monitor mode is set to RCMVAL_init) AND (the monitor status is set to RCMVAL_true))] ==> [(the monitor mode shall be set to RCMVAL_normal)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor mode is set to RCMVAL_init
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the monitor status is set to RCMVAL_true
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the monitor mode shall be set to RCMVAL_normal
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-22:]
		text: if the regulator mode equals RCMVAL_normal , and temp attribute of the lower desired temperature exceeds the temp attribute of the current temperature , the heat control shall be set to RCMVAL_control_on .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode equals RCMVAL_normal , and temp attribute of the lower desired temperature exceeds the temp attribute of the current temperature , the heat control shall be set to RCMVAL_control_on .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the regulator mode equals RCMVAL_normal) AND (temp attribute of the lower desired temperature exceeds the temp attribute of the current temperature))] ==> [(the heat control shall be set to RCMVAL_control_on)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode equals RCMVAL_normal
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if temp attribute of the lower desired temperature exceeds the temp attribute of the current temperature
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the heat control shall be set to RCMVAL_control_on
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-10:]
		text: the monitor interface mode shall be set to the monitor mode .

		<ReqSentence>
			<PR>
				Id: [1]
				text: the monitor interface mode shall be set to the monitor mode .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] )
					CTL-Formula: GF( [(the monitor interface mode shall be set to the monitor mode)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the monitor interface mode shall be set to the monitor mode
					C[1]==> Classification: FactualRule 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-32:]
		text: if the monitor interface failure is set to RCMVAL_false and the monitor internal failure is set to RCMVAL_false and the status attribute of the current temperature is set to valid , the monitor status shall be set to RCMVAL_true.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor interface failure is set to RCMVAL_false and the monitor internal failure is set to RCMVAL_false and the status attribute of the current temperature is set to valid , the monitor status shall be set to RCMVAL_true.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q) AND (R))] ==> [(S)] )
					CTL-Formula: GF( [((the monitor interface failure is set to RCMVAL_false) AND (the monitor internal failure is set to RCMVAL_false) AND (the status attribute of the current temperature is set to valid))] ==> [(the monitor status shall be set to RCMVAL_true)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor interface failure is set to RCMVAL_false
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the monitor internal failure is set to RCMVAL_false
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the status attribute of the current temperature is set to valid
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the monitor status shall be set to RCMVAL_true
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-20:]
		text: if the status attribute of the lower desired temperature or the upper desired temperature equals invalid , the regulator interface failure shall be set to RCMVAL_true.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the status attribute of the lower desired temperature or the upper desired temperature equals invalid , the regulator interface failure shall be set to RCMVAL_true.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) OR (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the status attribute of the lower desired temperature equals invalid) OR (the upper desired temperature equals invalid))] ==> [(the regulator interface failure shall be set to RCMVAL_true)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the status attribute of the lower desired temperature equals invalid
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the upper desired temperature equals invalid
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the regulator interface failure shall be set to RCMVAL_true
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-30:]
		text: if the regulator mode is set to RCMVAL_normal and the regulator status is set to RCMVAL_false, the regulator mode shall be set to RCMVAL_failed .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode is set to RCMVAL_normal and the regulator status is set to RCMVAL_false, the regulator mode shall be set to RCMVAL_failed .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the regulator mode is set to RCMVAL_normal) AND (the regulator status is set to RCMVAL_false))] ==> [(the regulator mode shall be set to RCMVAL_failed)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode is set to RCMVAL_normal
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the regulator status is set to RCMVAL_false
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the regulator mode shall be set to RCMVAL_failed
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-3:]
		text: if the regulator mode equals RCMVAL_failed, the output regulator status shall be set to RCMVAL_failed .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode equals RCMVAL_failed, the output regulator status shall be set to RCMVAL_failed .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the regulator mode equals RCMVAL_failed)] ==> [(the output regulator status shall be set to RCMVAL_failed)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode equals RCMVAL_failed
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the output regulator status shall be set to RCMVAL_failed
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-5:]
		text: if the regulator mode equals RCMVAL_failed , the heat control shall be set to RCMVAL_control_off .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode equals RCMVAL_failed , the heat control shall be set to RCMVAL_control_off .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the regulator mode equals RCMVAL_failed)] ==> [(the heat control shall be set to RCMVAL_control_off)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode equals RCMVAL_failed
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the heat control shall be set to RCMVAL_control_off
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-7:]
		text: if the monitor interface mode equals RCMVAL_normal , the output monitor status shall be set to RCMVAL_status_on .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor interface mode equals RCMVAL_normal , the output monitor status shall be set to RCMVAL_status_on .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the monitor interface mode equals RCMVAL_normal)] ==> [(the output monitor status shall be set to RCMVAL_status_on)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor interface mode equals RCMVAL_normal
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the output monitor status shall be set to RCMVAL_status_on
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-9:]
		text: if the monitor mode equals RCMVAL_init , the alarm control shall be set to RCMVAL_control_off .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor mode equals RCMVAL_init , the alarm control shall be set to RCMVAL_control_off .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the monitor mode equals RCMVAL_init)] ==> [(the alarm control shall be set to RCMVAL_control_off)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor mode equals RCMVAL_init
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the alarm control shall be set to RCMVAL_control_off
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-2:]
		text: if the regulator mode equals RCMVAL_normal , the output regulator status shall be set to RCMVAL_status_on .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode equals RCMVAL_normal , the output regulator status shall be set to RCMVAL_status_on .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the regulator mode equals RCMVAL_normal)] ==> [(the output regulator status shall be set to RCMVAL_status_on)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode equals RCMVAL_normal
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the output regulator status shall be set to RCMVAL_status_on
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-19:]
		text: when the reset equals RCMVAL_true , the regulator mode shall be set to RCMVAL_init .

		<ReqSentence>
			<PR>
				Id: [1]
				text: when the reset equals RCMVAL_true , the regulator mode shall be set to RCMVAL_init .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the reset equals RCMVAL_true)] ==> [(the regulator mode shall be set to RCMVAL_init)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: when the reset equals RCMVAL_true
					C[1]==> Classification: Trigger 
					C[2]==> Extracted Text: the regulator mode shall be set to RCMVAL_init
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-29:]
		text: if the regulator mode equals RCMVAL_init and the regulator status equals RCMVAL_true, the regulator mode shall be set to RCMVAL_normal.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode equals RCMVAL_init and the regulator status equals RCMVAL_true, the regulator mode shall be set to RCMVAL_normal.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [(( the regulator mode equals equals RCMVAL_init) AND (the regulator status equals RCMVAL_true))] ==> [(the regulator mode shall be set to RCMVAL_normal)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode equals equals RCMVAL_init
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if equals RCMVAL_init equals RCMVAL_true
					C[2]==> Classification: Action 
					C[3]==> Extracted Text: if the regulator status equals RCMVAL_true
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the regulator mode shall be set to RCMVAL_normal
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-17:]
		text: if the regulator mode equals RCMVAL_failed , the regulator mode shall never be set to RCMVAL_normal .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode equals RCMVAL_failed , the regulator mode shall never be set to RCMVAL_normal .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the regulator mode equals RCMVAL_failed)] ==> [(the regulator mode shall never be set to RCMVAL_normal)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode equals RCMVAL_failed
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the regulator mode shall never be set to RCMVAL_normal
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-27:]
		text: if the regulator interface failure is set to RCMVAL_false, and the regulator internal failure is set to RCMVAL_false, and the status attribute of the current temperature is set to valid , the regulator status shall be set to RCMVAL_true.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator interface failure is set to RCMVAL_false, and the regulator internal failure is set to RCMVAL_false, and the status attribute of the current temperature is set to valid , the regulator status shall be set to RCMVAL_true.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q) AND (R))] ==> [(S)] )
					CTL-Formula: GF( [((the regulator interface failure is set to RCMVAL_false) AND (the regulator internal failure is set to RCMVAL_false) AND (the status attribute of the current temperature is set to valid))] ==> [(the regulator status shall be set to RCMVAL_true)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator interface failure is set to RCMVAL_false
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the regulator internal failure is set to RCMVAL_false
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the status attribute of the current temperature is set to valid
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the regulator status shall be set to RCMVAL_true
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-15:]
		text: if the monitor status equals RCMVAL_true , the monitor init timeout shall be set to RCMVAL_false .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor status equals RCMVAL_true , the monitor init timeout shall be set to RCMVAL_false .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the monitor status equals RCMVAL_true)] ==> [(the monitor init timeout shall be set to RCMVAL_false)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor status equals RCMVAL_true
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the monitor init timeout shall be set to RCMVAL_false
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-25:]
		text: if the status attribute of the lower temperature and the upper temperature equals valid , the monitor interface failure shall be set to RCMVAL_false.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the status attribute of the lower temperature and the upper temperature equals valid , the monitor interface failure shall be set to RCMVAL_false.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the status attribute of the lower temperature equals valid) AND (the status attribute of the lower temperature equals valid))] ==> [(the monitor interface failure shall be set to RCMVAL_false)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the status attribute of the lower temperature the upper temperature equals valid
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the monitor interface failure shall be set to RCMVAL_false
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-13:]
		text: if the regulator status equals RCMVAL_false , the regulator init timeout shall be set to RCMVAL_true .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator status equals RCMVAL_false , the regulator init timeout shall be set to RCMVAL_true .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the regulator status equals RCMVAL_false)] ==> [(the regulator init timeout shall be set to RCMVAL_true)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator status equals RCMVAL_false
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the regulator init timeout shall be set to RCMVAL_true
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-35:]
		text: if the monitor mode is set to RCMVAL_normal and the monitor status is set to RCMVAL_false, the monitor mode shall be set to RCMVAL_failed .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor mode is set to RCMVAL_normal and the monitor status is set to RCMVAL_false, the monitor mode shall be set to RCMVAL_failed .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the monitor mode is set to RCMVAL_normal) AND (the monitor status is set to RCMVAL_false))] ==> [(the monitor mode shall be set to RCMVAL_failed)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor mode is set to RCMVAL_normal
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the monitor status is set to RCMVAL_false
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the monitor mode shall be set to RCMVAL_failed
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-23:]
		text: if the regulator mode equals RCMVAL_normal , and the temp attribute of the current temperature exceeds the temp attribute of the upper desired temperature , the heat control shall be set to RCMVAL_control_off .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode equals RCMVAL_normal , and the temp attribute of the current temperature exceeds the temp attribute of the upper desired temperature , the heat control shall be set to RCMVAL_control_off .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the regulator mode equals RCMVAL_normal) AND (the temp attribute of the current temperature exceeds the temp attribute of the upper desired temperature))] ==> [(the heat control shall be set to RCMVAL_control_off)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode equals RCMVAL_normal
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the temp attribute of the current temperature exceeds the temp attribute of the upper desired temperature
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the heat control shall be set to RCMVAL_control_off
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-11:]
		text: the regulator mode shall be initialized to RCMVAL_init .

		<ReqSentence>
			<PR>
				Id: [1]
				text: the regulator mode shall be initialized to RCMVAL_init .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] )
					CTL-Formula: GF( [(the regulator mode shall be initialized to RCMVAL_init)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: the regulator mode shall be initialized to RCMVAL_init
					C[1]==> Classification: FactualRule 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-33:]
		text: if the monitor interface failure is set to RCMVAL_true or the monitor internal failure is set to RCMVAL_true or the status attribute of the current temperature is not set to RCMVAL_valid , the monitor status shall be set to RCMVAL_false.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor interface failure is set to RCMVAL_true or the monitor internal failure is set to RCMVAL_true or the status attribute of the current temperature is not set to RCMVAL_valid , the monitor status shall be set to RCMVAL_false.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) OR (Q) OR (¬ R))] ==> [(S)] )
					CTL-Formula: GF( [((the monitor interface failure is set to RCMVAL_true) OR (the monitor internal failure is set to RCMVAL_true) OR (¬ the status attribute of the current temperature is not set to RCMVAL_valid))] ==> [(the monitor status shall be set to RCMVAL_false)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor interface failure is set to RCMVAL_true
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the monitor internal failure is set to RCMVAL_true
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: if the status attribute of the current temperature is not set to RCMVAL_valid
					C[3]==> Classification: Condition 
					C[4]==> Extracted Text: the monitor status shall be set to RCMVAL_false
					C[4]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-21:]
		text: if the status attribute of the lower desired temperature and the upper desired temperature equals valid , the regulator interface failure shall be set to RCMVAL_false.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the status attribute of the lower desired temperature and the upper desired temperature equals valid , the regulator interface failure shall be set to RCMVAL_false.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the status attribute of the lower desired temperature equals valid) AND (the upper desired temperature equals valid))] ==> [(the regulator interface failure shall be set to RCMVAL_false)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the status attribute of the lower desired temperature equals valid
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the upper desired temperature equals valid
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the regulator interface failure shall be set to RCMVAL_false
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-31:]
		text: if the regulator mode is set to RCMVAL_init and the regulator init timeout is set to RCMVAL_true, the regulator mode shall be set to RCMVAL_failed .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode is set to RCMVAL_init and the regulator init timeout is set to RCMVAL_true, the regulator mode shall be set to RCMVAL_failed .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [((P) AND (Q))] ==> [(R)] )
					CTL-Formula: GF( [((the regulator mode is set to RCMVAL_init) AND (the regulator init timeout is set to RCMVAL_true))] ==> [(the regulator mode shall be set to RCMVAL_failed)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode is set to RCMVAL_init
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: if the regulator init timeout is set to RCMVAL_true
					C[2]==> Classification: Condition 
					C[3]==> Extracted Text: the regulator mode shall be set to RCMVAL_failed
					C[3]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-4:]
		text: if the regulator mode equals RCMVAL_init, the heat control shall be set to RCMVAL_control_off.

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the regulator mode equals RCMVAL_init, the heat control shall be set to RCMVAL_control_off.
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the regulator mode equals RCMVAL_init)] ==> [(the heat control shall be set to RCMVAL_control_off)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the regulator mode equals RCMVAL_init
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the heat control shall be set to RCMVAL_control_off
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-6:]
		text: if the monitor interface mode equals RCMVAL_init , the output monitor status shall be set to RCMVAL_init .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor interface mode equals RCMVAL_init , the output monitor status shall be set to RCMVAL_init .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the monitor interface mode equals RCMVAL_init)] ==> [(the output monitor status shall be set to RCMVAL_init)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor interface mode equals RCMVAL_init
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the output monitor status shall be set to RCMVAL_init
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

	<Requirement>
		ID: [TempReqId-8:]
		text: if the monitor interface mode equals RCMVAL_failed , the output monitor status shall be set to RCMVAL_failed .

		<ReqSentence>
			<PR>
				Id: [1]
				text: if the monitor interface mode equals RCMVAL_failed , the output monitor status shall be set to RCMVAL_failed .
				<Formal-Representation>
					CTL-AbbrevatedFormula: GF( [(P)] ==> [(Q)] )
					CTL-Formula: GF( [(the monitor interface mode equals RCMVAL_failed)] ==> [(the output monitor status shall be set to RCMVAL_failed)] )
				</Formal-Representation>
				<ExtractedElements>
					C[1]==> Extracted Text: if the monitor interface mode equals RCMVAL_failed
					C[1]==> Classification: Condition 
					C[2]==> Extracted Text: the output monitor status shall be set to RCMVAL_failed
					C[2]==> Classification: Action 
				</ExtractedElements>
			</PR>
		</ReqSentence>
	</Requirement>

</SucceededRequirement>
</log>
